
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОстаткиМатериалов.Записывать = Истина;
	Движения.СтоимостьМатериалов.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.Управленческий.Записывать = Истина;
	
	// Создание менеджера временных таблиц
	МенеджерВТ = Новый МенеджерВременныхТаблиц;

#Область НоменклатураДокумента

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура,
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(ОказаниеУслугиПереченьНоменклатуры.Количество) КАК КоличествоВДокументе,
	|	СУММА(ОказаниеУслугиПереченьНоменклатуры.Сумма) КАК СуммаВДокументе,
	|	ОказаниеУслугиПереченьНоменклатуры.НаборСвойств
	|ПОМЕСТИТЬ НоменклатураДокумента
	|ИЗ
	|	Документ.ОказаниеУслуги.ПереченьНоменклатуры КАК ОказаниеУслугиПереченьНоменклатуры
	|ГДЕ
	|	ОказаниеУслугиПереченьНоменклатуры.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура,
	|	ОказаниеУслугиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры,
	|	ОказаниеУслугиПереченьНоменклатуры.НаборСвойств";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

#КонецОбласти

#Область ДвиженияДокумента

	Запрос2 = Новый Запрос;
	Запрос2.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос2.Текст =
	"ВЫБРАТЬ
	|	НоменклатураДокумента.Номенклатура,
	|	НоменклатураДокумента.ВидНоменклатуры,
	|	НоменклатураДокумента.КоличествоВДокументе,
	|	НоменклатураДокумента.СуммаВДокументе,
	|	ЕСТЬNULL(СтоимостьМатериаловОстатки.СтоимостьОстаток, 0) КАК Стоимость,
	|	ЕСТЬNULL(ОстаткиМатериаловОстатки.КоличествоОстаток, 0) КАК Количество,
	|	НоменклатураДокумента.НаборСвойств
	|ИЗ
	|	НоменклатураДокумента КАК НоменклатураДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьМатериалов.Остатки(&Период, Материал В
	|			(ВЫБРАТЬ
	|				НоменклатураДокумента.Номенклатура
	|			ИЗ
	|				НоменклатураДокумента)) КАК СтоимостьМатериаловОстатки
	|		ПО НоменклатураДокумента.Номенклатура = СтоимостьМатериаловОстатки.Материал
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиМатериалов.Остатки(&Период, Материал В
	|			(ВЫБРАТЬ
	|				НоменклатураДокумента.Номенклатура
	|			ИЗ
	|				НоменклатураДокумента)) КАК ОстаткиМатериаловОстатки
	|		ПО НоменклатураДокумента.Номенклатура = ОстаткиМатериаловОстатки.Материал";
	Запрос2.УстановитьПараметр("Период", МоментВремени());

	Движения.ОстаткиМатериалов.БлокироватьДляИзменения = Истина;
	Движения.СтоимостьМатериалов.БлокироватьДляИзменения = Истина;

	РезультатЗапроса = Запрос2.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл

		Если Выборка.Количество = 0 Тогда
			СтоимостьМатериала = 0;
		Иначе
			СтоимостьМатериала = Выборка.Стоимость / Выборка.Количество;
		КонецЕсли;

		Если Выборка.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
			// Регистр Остатки материалов Расход
			Движение = Движения.ОстаткиМатериалов.Добавить();
			Движение.Период = Дата;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Материал = Выборка.Номенклатура;
			Движение.НаборСвойств = Выборка.НаборСвойств;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.КоличествоВДокументе;
			
			// Регистр Стоимость материалов Расход
			Движение = Движения.СтоимостьМатериалов.Добавить();
			Движение.Период = Дата;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Материал = Выборка.Номенклатура;
			Движение.Стоимость = Выборка.КоличествоВДокументе * СтоимостьМатериала;

		КонецЕсли;
		
			// Регистр Продажи
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Мастер = Мастер;
		Движение.Количество = Выборка.КоличествоВДокументе;
		Движение.Выручка = Выборка.СуммаВДокументе;
		Движение.Стоимость = Выборка.КоличествоВДокументе * СтоимостьМатериала;
		
		// Регистр Управленческий
		// Проводка Дт62 - Кт90
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Основной.ДебиторскаяЗадолженность;
		Движение.СчетКт = ПланыСчетов.Основной.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = Выборка.СуммаВДокументе;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Клиенты] = Клиент;
		
		// Проводка Кр90 - Дт41
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Основной.Капитал;
		Движение.СчетКт = ПланыСчетов.Основной.Товары;
		Движение.Период = Дата;
		Движение.Сумма = СтоимостьМатериала * Выборка.КоличествоВДокументе;
		Движение.КоличествоКт = Выборка.КоличествоВДокументе;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Материалы] = Выборка.Номенклатура;		

	КонецЦикла;
	
	Движения.Записать();

#КонецОбласти

#Область КонтрольОстатков

	Если Режим = РежимПроведенияДокумента.Оперативный Тогда

		Запрос3 = Новый Запрос;
		Запрос3.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос3.Текст =
		"ВЫБРАТЬ
		|	ОстаткиМатериаловОстатки.Материал,
		|	ОстаткиМатериаловОстатки.КоличествоОстаток,
		|	ОстаткиМатериаловОстатки.НаборСвойств
		|ИЗ
		|	РегистрНакопления.ОстаткиМатериалов.Остатки(, Материал В
		|		(ВЫБРАТЬ
		|			НоменклатураДокумента.Номенклатура
		|		ИЗ
		|			НоменклатураДокумента)
		|	И Склад = &Склад) КАК ОстаткиМатериаловОстатки
		|ГДЕ
		|	ОстаткиМатериаловОстатки.КоличествоОстаток < 0";
		Запрос3.УстановитьПараметр("Склад", Склад);

		РезультатЗапроса = Запрос3.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает " + Строка(-Выборка.КоличествоОстаток) +
			 " единиц материала " + Выборка.Материал + 
			 " из набора свойств " + Выборка.НаборСвойств;
			Сообщение.Сообщить();

			Отказ = Истина;

		КонецЦикла;

	КонецЕсли;

#КонецОбласти

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти



#КонецЕсли
