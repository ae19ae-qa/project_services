
#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РассчитатьНачисления(НаборЗаписейРегистра, ТребуемыйВидРасчета, СписокСотрудников) Экспорт 
	
	Регистратор = НаборЗаписейРегистра.Отбор.Регистратор.Значение; 
	
	// Рассчитать первичные записи. 
	Если ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда 
		
		Запрос = Новый Запрос;
  		Запрос.Текст = 
		   "ВЫБРАТЬ
		   | ЕСТЬNULL(НачисленияДанныеГрафика.ЗначениеПериодДействия, 0)КАК Норма,
		   | ЕСТЬNULL(НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
		   | НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		   |ИЗ
		   | РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = 
		   |   &Регистратор И ВидРасчета = &ВидРасчета И Сотрудник В (&СписокСотрудников)) 
		   | 		КАК НачисленияДанныеГрафика";
	  
	  Запрос.УстановитьПараметр("Регистратор", Регистратор);
	  Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
	  Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	  
	  ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	  
	 Для Каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
	 	
		 СтруктураНомер = Новый Структура("НомерСтроки");
		 СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
		 ВыборкаРезультата.Сбросить(); 
		   
	  	 Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
	  	 			
		    	Если ВыборкаРезультата.Норма = 0 Тогда
			     	Сообщение = Новый СообщениеПользователю;
			      	Сообщение.Текст = "Вид расчета: Оклад – Нет рабочих дней в заданном периоде";
			     	Сообщение.Сообщить();
			     	ЗаписьРегистра.Результат = 0;
		    	Иначе     
		     	 // Рассчитать оклад по фактическому периоду и исходным данным.
		     		ЗаписьРегистра.Результат = (ЗаписьРегистра.ИсходныеДанные / 
			        ВыборкаРезультата.Норма) * ВыборкаРезультата.Факт;
			        
			        Сообщение = Новый СообщениеПользователю;
			        Сообщение.Текст = "Выполнен расчет " + ЗаписьРегистра.Регистратор 
			      				+ " – " + ЗаписьРегистра.ВидРасчета + " – " + ЗаписьРегистра.Сотрудник;
			        Сообщение.Сообщить(); 
		    	КонецЕсли;
	    	 
	  	 КонецЕсли;
	  	 	 КонецЦикла
	 
	 // Рассчитать вторичные записи. 	
	ИначеЕсли ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда 
		
		Запрос = Новый Запрос;
	  	Запрос.Текст = 
			"ВЫБРАТЬ
		    | НачисленияБазаНачисления.РезультатБаза КАК База,
		    | НачисленияБазаНачисления.НомерСтроки КАК НомерСтроки
		    |ИЗ
			| РегистрРасчета.Начисления.БазаНачисления(&ИзмеренияОсновного, 
	   		|  &ИзмеренияБазового, , Регистратор = &Регистратор И ВидРасчета 
	   		|    = &ВидРасчета И Сотрудник В (&СписокСотрудников))
	  		| КАК НачисленияБазаНачисления";  
	  		
	  	Измер = Новый Массив(1);
		Измер[0] = "Сотрудник";
			
		Запрос.УстановитьПараметр("ИзмеренияОсновного", Измер);
		Запрос.УстановитьПараметр("ИзмеренияБазового", Измер);
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
		Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
			
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
			
		Для Каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
			СтруктураНомер = Новый Структура("НомерСтроки");
			СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
	   		ВыборкаРезультата.Сбросить();
	   		 
			Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
					
				ЗаписьРегистра.Результат = ВыборкаРезультата.База * (10 / 100);
					
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Выполнен расчет " + ЗаписьРегистра.Регистратор 
				+ " – " + ЗаписьРегистра.ВидРасчета + " – " + ЗаписьРегистра.Сотрудник;
				Сообщение.Сообщить();
					
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
